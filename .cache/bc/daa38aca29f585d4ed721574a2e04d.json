{"id":"../node_modules/date-fns/esm/isValid/index.js","dependencies":[{"name":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\package.json","includedInParent":true,"mtime":1628472829857},{"name":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\package.json","includedInParent":true,"mtime":1628472815895},{"name":"../toDate/index.js","loc":{"line":1,"column":19},"parent":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\node_modules\\date-fns\\esm\\toDate\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":2,"column":25},"parent":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"C:\\Study\\Learn Javascript\\Learn with MDN\\Toolchain\\will-it-miss\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\n\nvar _index = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * @name isValid\r\n * @category Common Helpers\r\n * @summary Is the given date valid?\r\n *\r\n * @description\r\n * Returns false if argument is Invalid Date and true otherwise.\r\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\r\n * Invalid Date is a Date, whose time value is NaN.\r\n *\r\n * Time value of Date: http://es5.github.io/#x15.9.1.1\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - Now `isValid` doesn't throw an exception\r\n *   if the first argument is not an instance of Date.\r\n *   Instead, argument is converted beforehand using `toDate`.\r\n *\r\n *   Examples:\r\n *\r\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\r\n *   |---------------------------|---------------|---------------|\r\n *   | `new Date()`              | `true`        | `true`        |\r\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\r\n *   | `new Date('')`            | `false`       | `false`       |\r\n *   | `new Date(1488370835081)` | `true`        | `true`        |\r\n *   | `new Date(NaN)`           | `false`       | `false`       |\r\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\r\n *   | `''`                      | `TypeError`   | `false`       |\r\n *   | `1488370835081`           | `TypeError`   | `true`        |\r\n *   | `NaN`                     | `TypeError`   | `false`       |\r\n *\r\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\r\n *   that try to coerce arguments to the expected type\r\n *   (which is also the case with other *date-fns* functions).\r\n *\r\n * @param {*} date - the date to check\r\n * @returns {Boolean} the date is valid\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // For the valid date:\r\n * var result = isValid(new Date(2014, 1, 31))\r\n * //=> true\r\n *\r\n * @example\r\n * // For the value, convertable into a date:\r\n * var result = isValid(1393804800000)\r\n * //=> true\r\n *\r\n * @example\r\n * // For the invalid date:\r\n * var result = isValid(new Date(''))\r\n * //=> false\r\n */\nfunction isValid(dirtyDate) {\n  (0, _index2.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  return !isNaN(date);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":7,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":10,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":11,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":12,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":13,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":14,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":16,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":17,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":18,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":19,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":20,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":21,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":22,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":23,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":24,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":25,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":26,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":27,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":28,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":30,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":31,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":32,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":33,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":34,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":35,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":0}},{"generated":{"line":48,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":0}},{"generated":{"line":49,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":38,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":0}},{"generated":{"line":51,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":0}},{"generated":{"line":52,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":0}},{"generated":{"line":53,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":42,"column":0}},{"generated":{"line":54,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":0}},{"generated":{"line":55,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":0}},{"generated":{"line":56,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":45,"column":0}},{"generated":{"line":57,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":46,"column":0}},{"generated":{"line":58,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":47,"column":0}},{"generated":{"line":59,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":48,"column":0}},{"generated":{"line":60,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":49,"column":0}},{"generated":{"line":61,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":50,"column":0}},{"generated":{"line":62,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":51,"column":0}},{"generated":{"line":63,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":52,"column":0}},{"generated":{"line":64,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":53,"column":0}},{"generated":{"line":65,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":54,"column":0}},{"generated":{"line":66,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":55,"column":0}},{"generated":{"line":67,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":56,"column":0}},{"generated":{"line":68,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":57,"column":0}},{"generated":{"line":69,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":58,"column":0}},{"generated":{"line":70,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":59,"column":0}},{"generated":{"line":71,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":15}},{"name":"isValid","generated":{"line":71,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":24}},{"generated":{"line":71,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":15}},{"name":"dirtyDate","generated":{"line":71,"column":17},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":32}},{"generated":{"line":71,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":15}},{"generated":{"line":71,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":61,"column":43}},{"generated":{"line":72,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":2}},{"generated":{"line":72,"column":23},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":15}},{"generated":{"line":72,"column":24},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":2}},{"name":"arguments","generated":{"line":72,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":18}},{"generated":{"line":72,"column":35},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":62,"column":2}},{"generated":{"line":73,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":2}},{"name":"date","generated":{"line":73,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":6}},{"generated":{"line":73,"column":10},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":10}},{"generated":{"line":73,"column":13},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":13}},{"name":"dirtyDate","generated":{"line":73,"column":33},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":20}},{"generated":{"line":73,"column":42},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":13}},{"generated":{"line":73,"column":43},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":63,"column":2}},{"generated":{"line":74,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":2}},{"generated":{"line":74,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":9}},{"name":"isNaN","generated":{"line":74,"column":10},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":10}},{"generated":{"line":74,"column":15},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":15}},{"name":"date","generated":{"line":74,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":16}},{"generated":{"line":74,"column":20},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":15}},{"generated":{"line":74,"column":21},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":64,"column":2}},{"generated":{"line":75,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":65,"column":1}}],"sources":{"../node_modules/date-fns/esm/isValid/index.js":"import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isValid\r\n * @category Common Helpers\r\n * @summary Is the given date valid?\r\n *\r\n * @description\r\n * Returns false if argument is Invalid Date and true otherwise.\r\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\r\n * Invalid Date is a Date, whose time value is NaN.\r\n *\r\n * Time value of Date: http://es5.github.io/#x15.9.1.1\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - Now `isValid` doesn't throw an exception\r\n *   if the first argument is not an instance of Date.\r\n *   Instead, argument is converted beforehand using `toDate`.\r\n *\r\n *   Examples:\r\n *\r\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\r\n *   |---------------------------|---------------|---------------|\r\n *   | `new Date()`              | `true`        | `true`        |\r\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\r\n *   | `new Date('')`            | `false`       | `false`       |\r\n *   | `new Date(1488370835081)` | `true`        | `true`        |\r\n *   | `new Date(NaN)`           | `false`       | `false`       |\r\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\r\n *   | `''`                      | `TypeError`   | `false`       |\r\n *   | `1488370835081`           | `TypeError`   | `true`        |\r\n *   | `NaN`                     | `TypeError`   | `false`       |\r\n *\r\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\r\n *   that try to coerce arguments to the expected type\r\n *   (which is also the case with other *date-fns* functions).\r\n *\r\n * @param {*} date - the date to check\r\n * @returns {Boolean} the date is valid\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // For the valid date:\r\n * var result = isValid(new Date(2014, 1, 31))\r\n * //=> true\r\n *\r\n * @example\r\n * // For the value, convertable into a date:\r\n * var result = isValid(1393804800000)\r\n * //=> true\r\n *\r\n * @example\r\n * // For the invalid date:\r\n * var result = isValid(new Date(''))\r\n * //=> false\r\n */\r\n\r\nexport default function isValid(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  var date = toDate(dirtyDate);\r\n  return !isNaN(date);\r\n}"},"lineCount":null}},"error":null,"hash":"dcf9dedb27dc16e68837495ff6408ea4","cacheData":{"env":{}}}